version: '3.9'

services:
#  nginx:
#    container_name: moviegram-nginx
#    image: nginx:stable
#    restart: always
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#    networks:
#      - moviegram-network
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - client
#      - api


  client:
    container_name: moviegram-client
    image: moviegram-client
    restart: always
    build:
      context: ./client
      dockerfile: ./docker/Dockerfile
    env_file:
      - client/docker/.env
    environment:
      - PORT=3000
    networks:
      - moviegram-network
    ports:
      - "3000:3000"
    depends_on:
      - api
  api:
    container_name: moviegram-api
    image: moviegram-api
    restart: always
    env_file:
      - server/docker/.env
    build:
      context: ./server
      dockerfile: ./docker/containers/api/Dockerfile
    networks:
      - moviegram-network
    ports:
      - "4000:4000"
    depends_on:
      - db
  db:
    container_name: moviegram-db
    image: postgres:13-alpine
    restart: unless-stopped
    env_file:
      - server/docker/.env
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./containers/db/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
    networks:
      - moviegram-network
    ports:
      - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}
    command: -p ${POSTGRES_PORT:-5432}

volumes:
  postgres:
    name: moviegram-backend

networks:
  moviegram-network:
